{
  "openapi": "3.0.1",
  "info": {
    "contact": {
      "name": "codeBeamer",
      "url": "https://codebeamer.com"
    },
    "description": "",
    "title": "Codebeamer swagger API",
    "version": "3.0"
  },
  "externalDocs": {
    "description": "Swagger V3 Examples",
    "url": "https://support.ptc.com/help/codebeamer/r2.2/en/codebeamer/developers_guide/11375767.html"
  },
  "servers": [
    {
      "url": "https://codebeamer.vinai-systems.com/api"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": [],
      "BasicAuth": [],
      "BearerAuth": []
    }
  ],
  "paths": {
    "/v3/items/attachments/content": {
      "post": {
        "operationId": "getTrackerItemsAttachmentContents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackerItemAttachmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "description": "Attachments of tracker items: each tracker item goes to a subdirectory named as item-id and this directory contains the attachment files prefixed with the attachment id like [attachment-id]_[filename]."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              },
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Bad request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              },
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              },
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker items not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              },
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get attachments of tracker items matching the extension or mime type filters",
        "tags": [
          "Tracker item's attachment"
        ]
      }
    },
    "/v3/items/fields": {
      "put": {
        "externalDocs": {
          "description": "Tracker item operations",
          "url": "https://codebeamer.com/cb/wiki/11375769"
        },
        "operationId": "bulkUpdateTrackerItemFields",
        "parameters": [
          {
            "description": "If it's turned on the whole update will run in a single transaction.",
            "in": "query",
            "name": "atomic",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateTrackerItemFieldWithItemId"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkOperationResponse"
                }
              }
            },
            "description": "Bulk update response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Request cannot be processed"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker / Field not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "Bulk update fields of a tracker item",
        "tags": [
          "Tracker item"
        ]
      }
    },
    "/v3/items/move": {
      "post": {
        "description": "Move Tracker Items from the Source Tracker to the Target Tracker. The items are optional, if it is not provided all the Tracker Items will be moved from the Source Tracker. All the fields from the Source Tracker must be in the mapping. If you want to ignore one you set the targetField to null in the request.",
        "operationId": "moveTrackerItems",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackerItemMoveRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobReference"
                }
              }
            },
            "description": "Background job information that is started to move the Tracker Items."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Bad request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Access denied"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "Move Tracker Items from the Source Tracker to the Target Tracker",
        "tags": [
          "Tracker Item move"
        ]
      }
    },
    "/v3/items/move/field-mapping": {
      "get": {
        "operationId": "getItemMoveFieldMapping",
        "parameters": [
          {
            "description": "The id of the source Tracker",
            "in": "query",
            "name": "sourceTrackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "The id of the target Tracker",
            "in": "query",
            "name": "targetTrackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItemFieldMappingInfo"
                }
              }
            },
            "description": "The field mapping"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestException"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Access denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Resource not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Gets the default field mapping between two trackers",
        "tags": [
          "Tracker Item move"
        ]
      }
    },
    "/v3/items/query": {
      "get": {
        "externalDocs": {
          "description": "Documentation of cbQL",
          "url": "https://support.ptc.com/help/codebeamer/r2.2/en/codebeamer/user_guide/871101.html"
        },
        "operationId": "findTrackerItems",
        "parameters": [
          {
            "description": "Baseline on which the queery is applied.",
            "in": "query",
            "name": "baselineId",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Index of the result page starting from 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "description": "Number of items in a result page. Max value: 500",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          },
          {
            "example": "priority='Normal'",
            "in": "query",
            "name": "queryString",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItemSearchResult"
                }
              }
            },
            "description": "List tracker items by cbQL"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Request cannot be processed"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get tracker items by cbQL query string",
        "tags": [
          "Tracker item"
        ]
      },
      "post": {
        "description": "API can be called with a complex cbQL string to find tracker items",
        "externalDocs": {
          "description": "Documentation of cbQL",
          "url": "https://support.ptc.com/help/codebeamer/r2.2/en/codebeamer/user_guide/871101.html"
        },
        "operationId": "findTrackerItemsByCbQL",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackerItemSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItemSearchResult"
                }
              }
            },
            "description": "List tracker items by cbQL"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Request cannot be processed"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get tracker items by cbQL query string",
        "tags": [
          "Tracker item"
        ]
      }
    },
    "/v3/items/relations": {
      "post": {
        "description": "Use this endpoint to fetch tracker items related to some specified tracker items. The relations include downstream references, upstream references, incoming associations and outgoing associations of the given items. Relations with entities that are not tracker items (e.g., trackers, projects, URLs, etc.) will not be included in the result.",
        "operationId": "getBaselineTrackerItemsRelations",
        "parameters": [
          {
            "in": "query",
            "name": "baselineId",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackerItemsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrackerItemRelationsResult"
                  }
                }
              }
            },
            "description": "Tracker item list"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get tracker items related to some tracker items",
        "tags": [
          "Tracker item"
        ]
      }
    },
    "/v3/items/{itemId}": {
      "delete": {
        "operationId": "deleteTrackerItem",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItem"
                }
              }
            },
            "description": "Basic tracker item by id"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker not found"
          },
          "423": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLockedException"
                }
              }
            },
            "description": "Tracker item is locked"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "Move tracker item to trash",
        "tags": [
          "Tracker item"
        ]
      },
      "get": {
        "description": "API can be used for fetching basic information of a tracker item",
        "operationId": "getTrackerItem",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "version",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "baselineId",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItem"
                }
              }
            },
            "description": "Basic tracker item by id"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker item not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get basic tracker item",
        "tags": [
          "Tracker item"
        ]
      },
      "put": {
        "externalDocs": {
          "description": "Tracker item operations",
          "url": "https://codebeamer.com/cb/wiki/11375769"
        },
        "operationId": "updateTrackerItem",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "referenceItemId",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "position",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "BEFORE",
                "AFTER",
                "BELOW"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackerItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItem"
                }
              }
            },
            "description": "Basic tracker item by id"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Request cannot be processed"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker / Field not found"
          },
          "423": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLockedException"
                }
              }
            },
            "description": "Tracker item is locked"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "Update tracker item",
        "tags": [
          "Tracker item"
        ]
      }
    },
    "/v3/items/{itemId}/attachments": {
      "delete": {
        "operationId": "deleteTrackerItemAttachments",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Delete attachment group or delete just the attachment and let the comment there",
            "in": "query",
            "name": "deleteAttachmentGroup",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Attachments of tracker item removed"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker not found"
          },
          "423": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLockedException"
                }
              }
            },
            "description": "Tracker item is locked"
          },
          "429": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Delete attachments of tracker item",
        "tags": [
          "Tracker item's attachment"
        ]
      },
      "get": {
        "operationId": "getTrackerItemAttachments",
        "parameters": [
          {
            "description": "Id of the tracker item",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Filter by part of the filename of the attachments",
            "in": "query",
            "name": "fileName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSearchResult"
                }
              }
            },
            "description": "Attachments of tracker item"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Access denied"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker item not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get attachments of tracker item",
        "tags": [
          "Tracker item's attachment"
        ]
      },
      "post": {
        "operationId": "uploadTrackerItemAttachment",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadAttachment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Attachment"
                  }
                }
              }
            },
            "description": "Attachment of tracker item by id"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker not found"
          },
          "423": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLockedException"
                }
              }
            },
            "description": "Tracker item is locked"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Upload an attachment to a tracker item",
        "tags": [
          "Tracker item's attachment"
        ]
      }
    },
    "/v3/items/{itemId}/attachments/content": {
      "get": {
        "operationId": "getTrackerItemAttachmentContents",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "description": "Attachments of a tracker item: contains the attachment files prefixed with the attachment id like [attachment-id]_[filename]."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              },
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Bad request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              },
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              },
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker item not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              },
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get attachments of a tracker item",
        "tags": [
          "Tracker item's attachment"
        ]
      }
    },
    "/v3/items/{itemId}/attachments/{attachmentId}": {
      "delete": {
        "operationId": "deleteTrackerItemAttachment",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "attachmentId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Delete attachment group or delete just the attachment and let the comment there",
            "in": "query",
            "name": "deleteAttachmentGroup",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            },
            "description": "Attachment of tracker item by id"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker not found"
          },
          "423": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLockedException"
                }
              }
            },
            "description": "Tracker item is locked"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Delete attachment of tracker item by id",
        "tags": [
          "Tracker item's attachment"
        ]
      },
      "get": {
        "operationId": "getTrackerItemAttachment",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "attachmentId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            },
            "description": "Attachment of tracker item by id"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker / Attachment not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get attachment of tracker item by id",
        "tags": [
          "Tracker item's attachment"
        ]
      }
    },
    "/v3/items/{itemId}/attachments/{attachmentId}/content": {
      "get": {
        "operationId": "getTrackerItemAttachmentContent",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "attachmentId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "description": "Attachment of tracker item by id"
          },
          "403": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker / Attachment not found"
          },
          "429": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get content of an attachment of tracker item by id",
        "tags": [
          "Tracker item's attachment"
        ]
      },
      "put": {
        "operationId": "updateAttachmentOfTrackerItem",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "attachmentId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAttachment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            },
            "description": "Updated attachment"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authorization is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker item or attachment not found"
          },
          "423": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLockedException"
                }
              }
            },
            "description": "Tracker item is locked"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "Update content of attachment of tracker item",
        "tags": [
          "Tracker item's attachment"
        ]
      }
    },
    "/v3/items/{itemId}/children": {
      "get": {
        "operationId": "findTrackerItemChildren",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Index of the result page starting from 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "description": "Number of items in a result page. Max value: 500",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItemReferenceSearchResult"
                }
              }
            },
            "description": "List child items of a tracker item ordered by ordinal"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Invalid request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Permission is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker item is not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get child items of a tracker item",
        "tags": [
          "Tracker item"
        ]
      },
      "patch": {
        "operationId": "patchChildrenOfTrackerItem",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "INSERT",
                "REPLACE",
                "REMOVE"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackerItemChildReference"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItemChildReference"
                }
              }
            },
            "description": "New child item reference on the requested index"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Invalid request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Permission is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker item is not found"
          },
          "423": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLockedException"
                }
              }
            },
            "description": "Tracker item is locked"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Patch the child item list of a tracker item",
        "tags": [
          "Tracker item"
        ]
      },
      "post": {
        "operationId": "addChildToTrackerItem",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackerItemRevision"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItemChildReference"
                }
              }
            },
            "description": "Child item reference with index"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Invalid request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Permission is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker item is not found"
          },
          "423": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLockedException"
                }
              }
            },
            "description": "Tracker item is locked"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Add a child item to a tracker item",
        "tags": [
          "Tracker item"
        ]
      },
      "put": {
        "operationId": "replaceChildrenOfTrackerItem",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Number of items in the result page. Max value: 500",
            "in": "query",
            "name": "resultPageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTrackerItemChildrenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItemReferenceSearchResult"
                }
              }
            },
            "description": "First page of the new child list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Invalid request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Permission is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker item is not found"
          },
          "423": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLockedException"
                }
              }
            },
            "description": "Tracker item is locked"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Replace the child item list of a tracker item",
        "tags": [
          "Tracker item"
        ]
      }
    },
    "/v3/items/{itemId}/comments": {
      "delete": {
        "operationId": "deleteTrackerItemComments",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comments deleted"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker item not found"
          },
          "423": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLockedException"
                }
              }
            },
            "description": "Tracker item is locked"
          },
          "429": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Delete comments of tracker item by item id",
        "tags": [
          "Tracker item's comment"
        ]
      },
      "get": {
        "operationId": "getTrackerItemComments",
        "parameters": [
          {
            "description": "Id of a tracker item",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  }
                }
              }
            },
            "description": "Comments of tracker item by id"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker item not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get comments of tracker item",
        "tags": [
          "Tracker item's comment"
        ]
      },
      "post": {
        "operationId": "commentOnTrackerItem",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PostComment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            },
            "description": "Comment of tracker item by id"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker item not found"
          },
          "423": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLockedException"
                }
              }
            },
            "description": "Tracker item is locked"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Comment on a tracker item",
        "tags": [
          "Tracker item's comment"
        ]
      }
    },
    "/v3/items/{itemId}/comments/{commentId}": {
      "delete": {
        "operationId": "deleteTrackerItemComment",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "commentId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            },
            "description": "Comment of tracker item by id"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker item not found"
          },
          "423": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLockedException"
                }
              }
            },
            "description": "Tracker item is locked"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Delete comment of tracker item by id",
        "tags": [
          "Tracker item's comment"
        ]
      },
      "get": {
        "operationId": "getTrackerItemComment",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "commentId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            },
            "description": "Comment of tracker item by id"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker item not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get comment of tracker item by id",
        "tags": [
          "Tracker item's comment"
        ]
      },
      "post": {
        "operationId": "replyOnCommentOfTrackerItem",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "commentId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PostComment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            },
            "description": "Comment of tracker item by id"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker not found"
          },
          "423": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLockedException"
                }
              }
            },
            "description": "Tracker item is locked"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Reply on a comment of a tracker item",
        "tags": [
          "Tracker item's comment"
        ]
      },
      "put": {
        "operationId": "editCommentOnTrackerItem",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "commentId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EditComment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            },
            "description": "Edited comment"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker not found"
          },
          "423": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLockedException"
                }
              }
            },
            "description": "Tracker item is locked"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "Edit comment on a tracker item",
        "tags": [
          "Tracker item's comment"
        ]
      }
    },
    "/v3/items/{itemId}/fields": {
      "get": {
        "externalDocs": {
          "description": "Tracker item operations",
          "url": "https://codebeamer.com/cb/wiki/11375769"
        },
        "operationId": "getTrackerItemFields",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItemField"
                }
              }
            },
            "description": "Fields of tracker item by id"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Request cannot be processed"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker / Item not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "Get fields of a tracker item",
        "tags": [
          "Tracker item"
        ]
      },
      "put": {
        "externalDocs": {
          "description": "Tracker item operations",
          "url": "https://codebeamer.com/cb/wiki/11375769"
        },
        "operationId": "updateCustomFieldTrackerItem",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "If it's turned on HTTP 200 with empty response indicates that the update was successful.",
            "in": "query",
            "name": "quietMode",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTrackerItemField"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItem"
                }
              }
            },
            "description": "Basic tracker item by id"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Request cannot be processed"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker / Field not found"
          },
          "423": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLockedException"
                }
              }
            },
            "description": "Tracker item is locked"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "Update fields of a tracker item",
        "tags": [
          "Tracker item"
        ]
      }
    },
    "/v3/items/{itemId}/fields/accessibility": {
      "get": {
        "operationId": "getItemAccessibility",
        "parameters": [
          {
            "description": "Tracker item id",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "targetStatusId",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItemFieldAccessibilityList"
                }
              }
            },
            "description": "Accessibility returned"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker item not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get a tracker item fields accessibility",
        "tags": [
          "Tracker item"
        ]
      }
    },
    "/v3/items/{itemId}/fields/tables/{tableFieldId}": {
      "put": {
        "operationId": "updateTableFieldTrackerItem",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "tableFieldId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTrackerItemTableField"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItem"
                }
              }
            },
            "description": "Basic tracker item by id"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Request cannot be processed"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker / Field not found"
          },
          "423": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLockedException"
                }
              }
            },
            "description": "Tracker item is locked"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "Update table field of tracker item",
        "tags": [
          "Tracker item"
        ]
      }
    },
    "/v3/items/{itemId}/fields/{fieldId}/options": {
      "get": {
        "operationId": "getChoiceOptions",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "fieldId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Index of the result page starting from 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "description": "Number of items in a result page. Max value: 500",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceSearchResult"
                }
              }
            },
            "description": "Options"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestException"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "No option found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get the options of a choice field of tracker",
        "tags": [
          "Tracker item"
        ]
      }
    },
    "/v3/items/{itemId}/history": {
      "get": {
        "description": "API can be used for fetching basic information of a tracker item",
        "operationId": "getTrackerItemHistory",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItemHistory"
                }
              }
            },
            "description": "Basic tracker item by id"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get tracker item history",
        "tags": [
          "Tracker item"
        ]
      }
    },
    "/v3/items/{itemId}/lock": {
      "delete": {
        "operationId": "unlockTrackerItem",
        "parameters": [
          {
            "description": "Tracker item id",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unlock successful"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Could not unlock"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Wiki page not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Unlock a tracker item",
        "tags": [
          "Tracker item"
        ]
      },
      "get": {
        "operationId": "checkTrackerItemLock",
        "parameters": [
          {
            "description": "Tracker item id",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LockInfo"
                }
              }
            },
            "description": "Details of the lock, or an empty response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Wiki page not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Check whether a tracker item is locked, and if it is, retrieve the details of the lock",
        "tags": [
          "Tracker item"
        ]
      },
      "put": {
        "operationId": "lockTrackerItem",
        "parameters": [
          {
            "description": "Tracker item id",
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LockRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Lock acquired successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Bad request, request validation error"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Could not acquire lock"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Wiki page not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Put a soft lock on a tracker item",
        "tags": [
          "Tracker item"
        ]
      }
    },
    "/v3/items/{itemId}/relations": {
      "get": {
        "description": "Use this endpoint to fetch tracker items related to a specified tracker item. The relations include downstream references, upstream references, incoming associations and outgoing associations of the given item. Relations with entities that are not tracker items (e.g., trackers, projects, URLs, etc.) will not be included in the result.",
        "operationId": "getBaselineTrackerItemRelations",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "baselineId",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Index of page, starting from 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "description": "Number of items per page. Max value: 500",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 500
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItemRelationsResult"
                }
              }
            },
            "description": "Tracker item list"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get tracker items related to a tracker item",
        "tags": [
          "Tracker item"
        ]
      }
    },
    "/v3/items/{itemId}/reviews": {
      "get": {
        "operationId": "getTrackerItemReviews",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrackerItemReview"
                  }
                }
              }
            },
            "description": "List of tracker item reviews for the particular item"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Request cannot be processed"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Tracker item reviews are disabled, or access to them is denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker item not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get all Tracker Item Reviews for a particular Tracker Item",
        "tags": [
          "Tracker item"
        ]
      }
    },
    "/v3/items/{itemId}/transitions": {
      "get": {
        "description": "API can be used for getting available transitions for a tracker item",
        "operationId": "getTrackerItemTransitions",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowTransition"
                  }
                }
              }
            },
            "description": "Available transitions"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Missing user permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker item not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "summary": "Get available transitions for a tracker item",
        "tags": [
          "Tracker item"
        ]
      }
    },
    "/v3/trackers/permissions": {
      "get": {
        "operationId": "getTrackerPermissions",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrackerPermissionReference"
                  }
                }
              }
            },
            "description": "Tracker permissions."
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestException"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker permission is not found."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get available tracker permissions",
        "tags": [
          "Tracker permission"
        ]
      }
    },
    "/v3/trackers/permissions/{trackerPermissionId}": {
      "get": {
        "operationId": "getTrackerPermission",
        "parameters": [
          {
            "in": "path",
            "name": "trackerPermissionId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerPermission"
                }
              }
            },
            "description": "Tracker permission."
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestException"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Resource is not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get the immutable definition of a tracker permission",
        "tags": [
          "Tracker permission"
        ]
      }
    },
    "/v3/trackers/projects/{projectId}/repository": {
      "post": {
        "operationId": "createExternalScmRepository",
        "parameters": [
          {
            "description": "CB project id",
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalScmRepositoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "description": "Repository tracker item id"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Bad request, request validation error"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Resource not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "Create an external scm repository item",
        "tags": [
          "Repository item"
        ]
      }
    },
    "/v3/trackers/projects/{projectId}/repository/{repositoryId}": {
      "put": {
        "operationId": "updateExternalScmRepository",
        "parameters": [
          {
            "description": "CB project id",
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "CB repository id",
            "in": "path",
            "name": "repositoryId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalScmRepositoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "description": "Repository tracker item id"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Bad request, request validation error"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Resource not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "Update an external scm repository item",
        "tags": [
          "Repository item"
        ]
      }
    },
    "/v3/trackers/tree": {
      "get": {
        "operationId": "listTrackerTree",
        "parameters": [
          {
            "in": "query",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "workingSetId",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "revision",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrackerTree"
                  }
                }
              }
            },
            "description": "Tracker tree listed"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Bad request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "List tracker tree",
        "tags": [
          "Tracker Tree"
        ]
      }
    },
    "/v3/trackers/tree/update": {
      "post": {
        "operationId": "updateTrackerTree",
        "parameters": [
          {
            "in": "query",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "workingSetId",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TrackerTree"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonView"
                }
              }
            },
            "description": "Tracker tree updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Bad request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Access denied"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Update tracker tree",
        "tags": [
          "Tracker Tree"
        ]
      }
    },
    "/v3/trackers/types": {
      "get": {
        "operationId": "getTrackerTypes",
        "parameters": [
          {
            "description": "Outline is enabled, disabled or any(no filtering will be applied).",
            "in": "query",
            "name": "outline",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ANY",
              "enum": [
                "ENABLED",
                "DISABLED",
                "ANY"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrackerTypeReference"
                  }
                }
              }
            },
            "description": "Tracker types"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get the list of tracker types",
        "tags": [
          "Tracker"
        ]
      }
    },
    "/v3/trackers/types/{trackerTypeId}": {
      "get": {
        "operationId": "getTrackerType",
        "parameters": [
          {
            "in": "path",
            "name": "trackerTypeId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerType"
                }
              }
            },
            "description": "Tracker type"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker type is not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get the immutable definition of a tracker type",
        "tags": [
          "Tracker"
        ]
      }
    },
    "/v3/trackers/{testRunTrackerId}/automatedtestruns": {
      "post": {
        "description": "Upload large amount of automated test case run results into a single test run. This process may take a while, please check your proxy settings to prevent timeout.",
        "operationId": "uploadAutomatedTestResults",
        "parameters": [
          {
            "in": "path",
            "name": "testRunTrackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomatedTestRunRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItem"
                }
              }
            },
            "description": "The newly created test run"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Bad request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authorization is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "summary": "Create a new test run for large number of automated test cases",
        "tags": [
          "Test run"
        ]
      }
    },
    "/v3/trackers/{testRunTrackerId}/testruns": {
      "post": {
        "description": "For multiple test sets please use trackers/{testRunTrackerId}/testruns/generatefromtestset endpoint.",
        "externalDocs": {
          "description": "Uploading large amount of test result data",
          "url": "https://codebeamer.com/cb/wiki/12077512"
        },
        "operationId": "createTestRunForTestCase",
        "parameters": [
          {
            "in": "path",
            "name": "testRunTrackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTestRunRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItem"
                }
              }
            },
            "description": "The newly created test run"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Bad request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authorization is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker is not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "summary": "Create a new test run for test cases or test sets",
        "tags": [
          "Test run"
        ]
      }
    },
    "/v3/trackers/{testRunTrackerId}/testruns/generatefromtestset": {
      "post": {
        "externalDocs": {
          "description": "Uploading large amount of test result data",
          "url": "https://codebeamer.com/cb/wiki/12077512"
        },
        "operationId": "createTestRunForTestSets",
        "parameters": [
          {
            "in": "path",
            "name": "testRunTrackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTestRunFromTestSetsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestRunResult"
                }
              }
            },
            "description": "The newly created test run"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Bad request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authorization is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker is not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "summary": "Create a new test run for test cases or test sets",
        "tags": [
          "Test run"
        ]
      }
    },
    "/v3/trackers/{trackerId}": {
      "delete": {
        "operationId": "deleteTracker",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tracker deleted."
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker is not found"
          },
          "429": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Deletes a tracker",
        "tags": [
          "Tracker"
        ]
      },
      "get": {
        "operationId": "getTracker",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracker"
                }
              }
            },
            "description": "Tracker"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Project / Tracker not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get tracker",
        "tags": [
          "Tracker"
        ]
      },
      "put": {
        "operationId": "updateTracker",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tracker"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracker"
                }
              }
            },
            "description": "Tracker settings"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Updates a specific tracker",
        "tags": [
          "Tracker"
        ]
      }
    },
    "/v3/trackers/{trackerId}/baselines": {
      "get": {
        "operationId": "getTrackerBaselines",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceSearchResult"
                }
              }
            },
            "description": "Baselines of the tracker"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Not authorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker is not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "summary": "Get baselines of a specific tracker",
        "tags": [
          "Tracker"
        ]
      }
    },
    "/v3/trackers/{trackerId}/children": {
      "get": {
        "operationId": "findTrackerChildren",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Index of the result page starting from 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "description": "Number of items in a result page. Max value: 500",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItemReferenceSearchResult"
                }
              }
            },
            "description": "List child items of a tracker item ordered by ordinal"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Invalid request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Permission is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker is not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get child items of a tracker item",
        "tags": [
          "Tracker item"
        ]
      },
      "patch": {
        "operationId": "patchChildrenOfTracker",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": false,
            "schema": {
              "type": "string",
              "default": "INSERT",
              "enum": [
                "INSERT"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackerItemChildReference"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItemChildReference"
                }
              }
            },
            "description": "New child item reference on the requested index"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Invalid request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Permission is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker is not found"
          },
          "423": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLockedException"
                }
              }
            },
            "description": "Tracker item is locked"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Patch the child item list of a tracker item",
        "tags": [
          "Tracker item"
        ]
      },
      "post": {
        "operationId": "addChildToTracker",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackerItemRevision"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItemChildReference"
                }
              }
            },
            "description": "Child item reference with index"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Invalid request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Permission is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker is not found"
          },
          "423": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLockedException"
                }
              }
            },
            "description": "Tracker item is locked"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Add a child item to a tracker item",
        "tags": [
          "Tracker item"
        ]
      },
      "put": {
        "operationId": "replaceChildrenOfTracker",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Number of items in the result page. Max value: 500",
            "in": "query",
            "name": "resultPageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTrackerItemChildrenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItemReferenceSearchResult"
                }
              }
            },
            "description": "First page of the new child list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Invalid request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Permission is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker is not found"
          },
          "423": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLockedException"
                }
              }
            },
            "description": "Tracker item is locked"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Reorder the child item list of a tracker",
        "tags": [
          "Tracker item"
        ]
      }
    },
    "/v3/trackers/{trackerId}/fields": {
      "get": {
        "operationId": "getTrackerFields",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FieldReference"
                  }
                }
              }
            },
            "description": "Field references"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestException"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Field not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get fields of tracker",
        "tags": [
          "Tracker"
        ]
      }
    },
    "/v3/trackers/{trackerId}/fields/permissions": {
      "get": {
        "operationId": "getTrackerFieldsPermissions",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "statusId",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerFieldsStatusPermissions"
                }
              }
            },
            "description": "Permissions by status and role"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Status id is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authorization is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get permissions of all fields of a tracker",
        "tags": [
          "Tracker"
        ]
      }
    },
    "/v3/trackers/{trackerId}/fields/{fieldId}": {
      "get": {
        "operationId": "getTrackerField",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "fieldId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbstractField"
                }
              }
            },
            "description": "Field by id"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestException"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Field not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get field of tracker",
        "tags": [
          "Tracker"
        ]
      }
    },
    "/v3/trackers/{trackerId}/fields/{fieldId}/options/{optionId}": {
      "get": {
        "operationId": "getChoiceOption",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "fieldId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "optionId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChoiceOptionReference"
                }
              }
            },
            "description": "Option by id"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestException"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Option not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get option of a choice field of tracker",
        "tags": [
          "Tracker"
        ]
      }
    },
    "/v3/trackers/{trackerId}/fields/{fieldId}/permissions": {
      "get": {
        "operationId": "getTrackerFieldPermissions",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "fieldId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "statusId",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrackerFieldStatusPermissions"
                  }
                }
              }
            },
            "description": "Permissions by status and role"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Status id is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authorization is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker or field not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get permissions of tracker field",
        "tags": [
          "Tracker"
        ]
      }
    },
    "/v3/trackers/{trackerId}/icon": {
      "put": {
        "operationId": "updateTrackerIcon",
        "parameters": [
          {
            "description": "Id of the tracker",
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "icon"
                ],
                "type": "object",
                "properties": {
                  "icon": {
                    "type": "string",
                    "description": "Icon image file",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tracker icon uploaded successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Could not read image from the request, or it's the wrong format"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "The tracker could not be accessed"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker not found"
          },
          "429": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Upload a tracker icon",
        "tags": [
          "Tracker"
        ]
      }
    },
    "/v3/trackers/{trackerId}/items": {
      "get": {
        "operationId": "getItemsByTracker",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Index of the result page starting from 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "description": "Number of items in a result page. Max value: 500",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItemReferenceSearchResult"
                }
              }
            },
            "description": "List of tracker items"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Request cannot be processed"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker is not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get items in a specific tracker",
        "tags": [
          "Tracker"
        ]
      },
      "post": {
        "externalDocs": {
          "description": "(If the summary of the new item is longer than 255 characters the value will be truncated.) Tracker item operations",
          "url": "https://codebeamer.com/cb/wiki/11375769"
        },
        "operationId": "createTrackerItem",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "parentItemId",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "referenceItemId",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "position",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "BEFORE",
                "AFTER",
                "BELOW"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackerItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerItem"
                }
              }
            },
            "description": "Basic tracker item by id"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Request cannot be processed"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker / Field not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "Create a tracker item",
        "tags": [
          "Tracker item"
        ]
      }
    },
    "/v3/trackers/{trackerId}/outline": {
      "get": {
        "operationId": "getTrackerOutline",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Show only the children of this item.",
            "in": "query",
            "name": "parentItemId",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "The depth level of the result outline.",
            "in": "query",
            "name": "resultDepthFilter",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutlineItemSearchResult"
                }
              }
            },
            "description": "Outline of the tracker"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Request cannot be processed"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Not authorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker is not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "summary": "Get outline of a specific tracker",
        "tags": [
          "Tracker"
        ]
      }
    },
    "/v3/trackers/{trackerId}/permissions": {
      "get": {
        "description": "API can be used to list tracker permissions per roles, filtering is possible by user, user and on of the user's role, or just by role",
        "operationId": "getTrackerPermissionsWithRoles",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "userId",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "roleId",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleWithPermissions"
                  }
                }
              }
            },
            "description": "Tracker permissions by role."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "No access permission for this resource"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker is not found."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "List tracker permissions per role",
        "tags": [
          "Tracker permission"
        ]
      }
    },
    "/v3/trackers/{trackerId}/reports": {
      "get": {
        "operationId": "getTrackerReports",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportReference"
                  }
                }
              }
            },
            "description": "Tracker report reference list"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "summary": "Get all reports of a specific tracker",
        "tags": [
          "Tracker report"
        ]
      },
      "post": {
        "operationId": "createTrackerReport",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackerReportSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerReportSettings"
                }
              }
            },
            "description": "Tracker report settings"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Creates a report of a specific tracker",
        "tags": [
          "Tracker report"
        ]
      }
    },
    "/v3/trackers/{trackerId}/reports/{reportId}": {
      "delete": {
        "operationId": "deleteTrackerReport",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "reportId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tracker report deleted."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker / Report not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Deletes a report of a specific tracker",
        "tags": [
          "Tracker report"
        ]
      },
      "put": {
        "operationId": "updateTrackerReport",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "reportId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackerReportSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackerReportSettings"
                }
              }
            },
            "description": "Tracker report settings"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker / Report not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Updates a report of a specific tracker",
        "tags": [
          "Tracker report"
        ]
      }
    },
    "/v3/trackers/{trackerId}/reports/{reportId}/items": {
      "get": {
        "operationId": "getTrackerReportItems",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "reportId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Index of a report page starting from 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "description": "Number of items a report page. Max value: 500",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportItemResult"
                }
              }
            },
            "description": "Tracker report items"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker / Report not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get report items of a specific tracker view",
        "tags": [
          "Tracker report"
        ]
      }
    },
    "/v3/trackers/{trackerId}/reports/{reportId}/results": {
      "get": {
        "operationId": "getTrackerReport",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "reportId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Index of a report page starting from 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "description": "Number of items a report page. Max value: 500",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResult"
                }
              }
            },
            "description": "Tracker report"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker / Report not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get a report of a specific tracker",
        "tags": [
          "Tracker report"
        ]
      }
    },
    "/v3/trackers/{trackerId}/roles/{roleId}/permissions": {
      "delete": {
        "operationId": "removePermissions",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tracker permissions were removed."
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestException"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker/role is not found"
          },
          "429": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Removes all tracker permissions from a specific role",
        "tags": [
          "Tracker permission"
        ]
      },
      "put": {
        "operationId": "updatePermission",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionIdsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleWithPermissions"
                  }
                }
              }
            },
            "description": "Tracker permissions are set"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestException"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker / permission / roles not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Set the tracker permissions for a specific role",
        "tags": [
          "Tracker permission"
        ]
      }
    },
    "/v3/trackers/{trackerId}/schema": {
      "get": {
        "operationId": "getTrackerSchema",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbstractField"
                  }
                }
              }
            },
            "description": "Field definitions"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestException"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Field not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          }
        },
        "summary": "Get the schema of a tracker",
        "tags": [
          "Tracker"
        ]
      }
    },
    "/v3/trackers/{trackerId}/transitions": {
      "get": {
        "operationId": "getTrackerTransitions",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "The from status id filter for transitions.",
            "in": "query",
            "name": "fromStatusId",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowTransition"
                  }
                }
              }
            },
            "description": "Tracker transition list"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Tracker not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "summary": "Get all transitions of a specific tracker",
        "tags": [
          "Tracker"
        ]
      }
    },
    "/v3/trackers/{trackerId}/working-sets": {
      "get": {
        "description": "Lists Working-Sets that contain the given Tracker or Branch.",
        "operationId": "getTrackerWorkingSets",
        "parameters": [
          {
            "description": "Tracker or Branch id",
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Find Tracker or Branch if deleted and the result contains the deleted Working-Sets",
            "in": "query",
            "name": "includeDeleted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrackerWorkingSet"
                  }
                }
              }
            },
            "description": "List of Working-Sets that contain the given tracker."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            },
            "description": "Bad request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnauthorizedException"
                }
              }
            },
            "description": "Authentication is required"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceForbiddenException"
                }
              }
            },
            "description": "Authorization is required"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            },
            "description": "Resource not found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsException"
                }
              }
            },
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "Lists Working-Sets",
        "tags": [
          "Working-Set"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AbstractField": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of a field"
          },
          "formula": {
            "type": "string",
            "description": "Formula value of a field"
          },
          "hidden": {
            "type": "boolean",
            "description": "Visibility status of a field"
          },
          "hideIfDependencyFormula": {
            "type": "string",
            "description": "Hide If dependency formula value of a field"
          },
          "id": {
            "type": "integer",
            "description": "Id of a field",
            "format": "int32"
          },
          "legacyRestName": {
            "type": "string",
            "description": "Identifier matching the legacy REST API naming"
          },
          "mandatoryIfDependencyFormula": {
            "type": "string",
            "description": "Mandatory If dependency formula value of a field"
          },
          "mandatoryInStatuses": {
            "type": "array",
            "description": "List of statuses where the field is mandatory.",
            "items": {
              "$ref": "#/components/schemas/ChoiceOptionReference"
            }
          },
          "name": {
            "type": "string",
            "description": "Name of a field"
          },
          "sharedFields": {
            "type": "array",
            "description": "List of shared fields assigned to this field",
            "items": {
              "$ref": "#/components/schemas/SharedFieldReference"
            }
          },
          "title": {
            "type": "string",
            "description": "Title of a field"
          },
          "trackerItemField": {
            "type": "string",
            "description": "Tracker item's field name for this field"
          },
          "type": {
            "type": "string",
            "description": "Type of a field"
          },
          "valueModel": {
            "type": "string",
            "description": "Name of the updater/getter value model"
          }
        },
        "description": "Abstract field",
        "discriminator": {
          "propertyName": "type"
        }
      },
      "Attachment": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "The date when the entity was created",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "description": {
            "type": "string",
            "description": "Description of the entity"
          },
          "descriptionFormat": {
            "type": "string",
            "description": "Description format of the entity",
            "enum": [
              "PlainText",
              "Html",
              "Wiki"
            ]
          },
          "id": {
            "minimum": 0,
            "type": "integer",
            "description": "Id of the entity",
            "format": "int32"
          },
          "modifiedAt": {
            "type": "string",
            "description": "The date when the entity was modified",
            "format": "date-time"
          },
          "modifiedBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "name": {
            "type": "string",
            "description": "Name of the entity"
          },
          "sha512": {
            "type": "string",
            "description": "Hash of a attachment"
          },
          "size": {
            "type": "integer",
            "description": "Size of a attachment",
            "format": "int64"
          },
          "version": {
            "type": "integer",
            "description": "Version of a attachment",
            "format": "int32"
          }
        },
        "description": "Attachments of a comment"
      },
      "AttachmentSearchResult": {
        "type": "object",
        "properties": {
          "attachments": {
            "type": "array",
            "description": "Found attachments",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          },
          "page": {
            "type": "integer",
            "description": "Index of the page",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Size of the found page",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "description": "Number of matched tracker items by the search criteria",
            "format": "int32"
          }
        },
        "description": "One page of attachments."
      },
      "AutomatedTestRunRequest": {
        "required": [
          "testCaseTrackerId",
          "testResults"
        ],
        "type": "object",
        "properties": {
          "createNonExistentTestCases": {
            "type": "boolean",
            "description": "Flag to create new test cases from testResults if necessary"
          },
          "testCaseTrackerId": {
            "type": "integer",
            "description": "ID of the Test Case tracker",
            "format": "int32"
          },
          "testResults": {
            "type": "array",
            "description": "Test case results to include into the test run",
            "items": {
              "$ref": "#/components/schemas/AutomatedTestCaseRunResult"
            }
          },
          "testRunModel": {
            "$ref": "#/components/schemas/TrackerItem"
          }
        },
        "description": "Request model to create a test run from test case runs"
      },
      "BadRequestException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "resourceUri": {
            "type": "string"
          }
        }
      },
      "BulkOperationResponse": {
        "type": "object",
        "properties": {
          "failedOperations": {
            "type": "array",
            "description": "List of failed operations",
            "items": {
              "$ref": "#/components/schemas/FailedOperation"
            }
          },
          "successfulOperationsCount": {
            "type": "integer",
            "description": "Count of successful operations",
            "format": "int32"
          }
        },
        "description": "Holds the response of a bulk operation"
      },
      "ChoiceOptionReference": {
        "type": "object",
        "description": "Reference to a choice option",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractReference"
          }
        ]
      },
      "Comment": {
        "type": "object",
        "properties": {
          "attachments": {
            "type": "array",
            "description": "Attachments of a comment",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          },
          "comment": {
            "type": "string",
            "description": "Text of a comment"
          },
          "commentFormat": {
            "type": "string",
            "description": "Format of a comment",
            "enum": [
              "PlainText",
              "Html",
              "Wiki"
            ]
          },
          "createdAt": {
            "type": "string",
            "description": "The date when the entity was created",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "id": {
            "minimum": 0,
            "type": "integer",
            "description": "Id of the entity",
            "format": "int32"
          },
          "modifiedAt": {
            "type": "string",
            "description": "The date when the entity was modified",
            "format": "date-time"
          },
          "modifiedBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "name": {
            "type": "string",
            "description": "Name of the entity"
          },
          "parent": {
            "$ref": "#/components/schemas/CommentReference"
          },
          "version": {
            "type": "integer",
            "description": "Version of a comment",
            "format": "int32"
          }
        },
        "description": "Comment of a tracker item"
      },
      "CommentReference": {
        "type": "object",
        "description": "Reference to a comment of a tracker item",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractReference"
          }
        ]
      },
      "CreateTestRunFromTestSetsRequest": {
        "type": "object",
        "properties": {
          "runOnlyAcceptedTestCases": {
            "type": "boolean",
            "description": "Generate Test Runs only from accepted Test Cases.",
            "default": false
          },
          "testRunModel": {
            "$ref": "#/components/schemas/TrackerItem"
          },
          "testSetRefs": {
            "type": "array",
            "description": "Test set ids to include into the test run. Only the first test set will be considered.",
            "items": {
              "$ref": "#/components/schemas/TrackerItemReference"
            }
          }
        },
        "description": "Request model to create a test run from multiple test sets"
      },
      "CreateTestRunRequest": {
        "type": "object",
        "properties": {
          "runOnlyAcceptedTestCases": {
            "type": "boolean",
            "description": "Generate Test Runs only from accepted Test Cases.",
            "default": false
          },
          "testCaseIds": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/TrackerItemReference"
            }
          },
          "testCaseRefs": {
            "type": "array",
            "description": "Test case ids to include into the test run",
            "items": {
              "$ref": "#/components/schemas/TrackerItemReference"
            }
          },
          "testRunModel": {
            "$ref": "#/components/schemas/TrackerItem"
          },
          "testSetIds": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/TrackerItemReference"
            }
          },
          "testSetRefs": {
            "type": "array",
            "description": "Test set ids to include into the test run. Only the first test set will be considered.",
            "items": {
              "$ref": "#/components/schemas/TrackerItemReference"
            }
          }
        },
        "description": "Request model to create a test run from multiple test cases or 1 test set"
      },
      "EditComment": {
        "required": [
          "comment"
        ],
        "type": "object",
        "properties": {
          "attachments": {
            "type": "string",
            "description": "Attachments of a comment",
            "format": "binary"
          },
          "comment": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Text of a comment"
          },
          "commentFormat": {
            "type": "string",
            "description": "Format of a comment",
            "default": "PlainText",
            "enum": [
              "PlainText",
              "Html",
              "Wiki"
            ]
          }
        }
      },
      "ExternalScmRepositoryRequest": {
        "required": [
          "enablePatchSynchronization",
          "name",
          "ownerName",
          "remoteApiUrl",
          "repositoryName",
          "scmType"
        ],
        "type": "object",
        "properties": {
          "accessTokenId": {
            "type": "integer",
            "description": "Id of already created token for external SCM provider API. Required in case when old access token should be used",
            "format": "int32"
          },
          "accessTokenName": {
            "type": "string",
            "description": "Name of new access token for external SCM provider API. Required in case when new access token item should be created"
          },
          "accessTokenValue": {
            "type": "string",
            "description": "Value of new access token for external SCM provider API. Required in case when new access token item should be created"
          },
          "enablePatchSynchronization": {
            "type": "boolean",
            "description": "Enable or disable patch synchronization"
          },
          "name": {
            "type": "string",
            "description": "Name of new CB external SCM repository"
          },
          "ownerName": {
            "type": "string",
            "description": "Owner name or organization name of external SCM provider repository"
          },
          "projectName": {
            "type": "string",
            "description": "Project name of external SCM provider repository"
          },
          "remoteApiUrl": {
            "type": "string",
            "description": "Base API URL of external SCM provider"
          },
          "repositoryName": {
            "type": "string",
            "description": "Repository name on external SCM provider's side"
          },
          "scmType": {
            "type": "string",
            "description": "External SCM provider"
          },
          "secretId": {
            "type": "integer",
            "description": "Id of already created Secret for external SCM provider API",
            "format": "int32"
          }
        },
        "description": "Basic properties required for codebeamer external scm repository item"
      },
      "FailedOperation": {
        "type": "object",
        "properties": {
          "exceptionMessage": {
            "type": "string",
            "description": "Exception message"
          },
          "id": {
            "type": "integer",
            "description": "Entity id",
            "format": "int32"
          }
        },
        "description": "Holds the details of a failed operation"
      },
      "FieldReference": {
        "type": "object",
        "description": "Reference to a field of a specific tracker",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractReference"
          },
          {
            "type": "object",
            "properties": {
              "sharedFieldNames": {
                "type": "array",
                "description": "The names of a shared fields assigned to the field.",
                "readOnly": true,
                "items": {
                  "type": "string",
                  "description": "The names of a shared fields assigned to the field.",
                  "readOnly": true
                }
              },
              "trackerId": {
                "type": "integer",
                "description": "Id of the tracker",
                "format": "int32",
                "example": 1000
              }
            }
          }
        ]
      },
      "InternalServerErrorException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "resourceUri": {
            "type": "string"
          }
        }
      },
      "JobReference": {
        "required": [
          "jobId",
          "jobType"
        ],
        "type": "object",
        "properties": {
          "jobId": {
            "type": "integer",
            "description": "Id of the job",
            "format": "int32"
          },
          "jobType": {
            "type": "string",
            "description": "Type of the job"
          }
        },
        "description": "Reference to a background job"
      },
      "JsonView": {
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string"
          },
          "json": {
            "type": "string"
          },
          "jsonObject": {
            "$ref": "#/components/schemas/JsonView"
          }
        }
      },
      "LockInfo": {
        "type": "object",
        "properties": {
          "expires": {
            "type": "boolean",
            "description": "Whether the lock will expire on its own, eg. if it is a soft lock"
          },
          "user": {
            "$ref": "#/components/schemas/UserReference"
          }
        },
        "description": "Information about an artifact lock"
      },
      "LockRequest": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "string",
            "description": "If not a hard lock, the duration specified in time notation",
            "example": "1:30h"
          },
          "hard": {
            "type": "boolean",
            "description": "Whether the lock should be hard"
          }
        },
        "description": "Requested lock configuration"
      },
      "OutlineItemSearchResult": {
        "type": "object",
        "properties": {
          "outlineItems": {
            "type": "array",
            "description": "Found outline items",
            "items": {
              "$ref": "#/components/schemas/OutlineItem"
            }
          },
          "page": {
            "type": "integer",
            "description": "Index of the page",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Size of the found page",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "description": "Number of matched tracker items by the search criteria",
            "format": "int32"
          }
        },
        "description": "Paginated search result of outline items"
      },
      "PermissionIdsRequest": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "description": "Permission references.",
            "items": {
              "$ref": "#/components/schemas/TrackerPermissionReference"
            }
          }
        },
        "description": "Request model for multiple items."
      },
      "PostComment": {
        "required": [
          "comment"
        ],
        "type": "object",
        "properties": {
          "attachments": {
            "type": "string",
            "description": "Attachments of a comment",
            "format": "binary"
          },
          "comment": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Text of a comment"
          },
          "commentFormat": {
            "type": "string",
            "description": "Format of a comment",
            "default": "PlainText",
            "enum": [
              "PlainText",
              "Html",
              "Wiki"
            ]
          }
        }
      },
      "ReferenceSearchResult": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Index of the page",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Size of the found page",
            "format": "int32"
          },
          "references": {
            "type": "array",
            "description": "Found references",
            "items": {
              "$ref": "#/components/schemas/AbstractReference"
            }
          },
          "total": {
            "type": "integer",
            "description": "Number of matched tracker items by the search criteria",
            "format": "int32"
          }
        },
        "description": "One page of references."
      },
      "ReportItemResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "Found tracker items",
            "items": {
              "$ref": "#/components/schemas/ReportItem"
            }
          },
          "page": {
            "type": "integer",
            "description": "Index of the page",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Size of the found page",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "description": "Number of matched tracker items by the search criteria",
            "format": "int32"
          }
        }
      },
      "ReportReference": {
        "type": "object",
        "description": "Reference to a report",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractReference"
          }
        ]
      },
      "ReportResult": {
        "type": "object",
        "properties": {
          "cbQL": {
            "type": "string",
            "description": "CbQL query behind the report",
            "example": "project.id IN (2) AND tracker.id IN (21323) ORDER BY priority ASC"
          },
          "columns": {
            "type": "array",
            "description": "Column information",
            "items": {
              "$ref": "#/components/schemas/ReportColumn"
            }
          },
          "data": {
            "$ref": "#/components/schemas/ReportGroup"
          },
          "pagingInformation": {
            "$ref": "#/components/schemas/ReportPagingInformation"
          },
          "report": {
            "$ref": "#/components/schemas/ReportReference"
          },
          "showAllChildren": {
            "type": "boolean",
            "description": "Indicator to ability to collapse/expand all child items."
          }
        },
        "description": "Report data model"
      },
      "ResourceForbiddenException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "resourceUri": {
            "type": "string"
          }
        }
      },
      "ResourceLockedException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "resourceUri": {
            "type": "string"
          }
        }
      },
      "ResourceNotFoundException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "resourceUri": {
            "type": "string"
          }
        }
      },
      "ResourceUnauthorizedException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "resourceUri": {
            "type": "string"
          }
        }
      },
      "RestException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "resourceUri": {
            "type": "string"
          }
        }
      },
      "RoleWithPermissions": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/RoleReference"
          },
          "trackerPermissions": {
            "type": "array",
            "description": "Permission for the role",
            "items": {
              "$ref": "#/components/schemas/TrackerPermissionReference"
            }
          }
        },
        "description": "Model that contains permissions connected to roles"
      },
      "SharedFieldReference": {
        "type": "object",
        "description": "Reference to a shared field",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractReference"
          }
        ]
      },
      "TestRunResult": {
        "type": "object",
        "properties": {
          "testRuns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackerItem"
            }
          }
        },
        "description": "Multiple Test Runs"
      },
      "TooManyRequestsException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "resourceUri": {
            "type": "string"
          },
          "retryAfterSecond": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Tracker": {
        "required": [
          "defaultShowAncestorItems",
          "defaultShowDescendantItems",
          "deleted",
          "hidden",
          "onlyWorkflowCanCreateNewReferringItem",
          "usingQuickTransitions",
          "usingWorkflow"
        ],
        "type": "object",
        "properties": {
          "availableAsTemplate": {
            "type": "boolean",
            "description": "Indicator if the tracker can be used as a template"
          },
          "color": {
            "type": "string",
            "description": "Color of the tracker"
          },
          "createdAt": {
            "type": "string",
            "description": "The date when the entity was created",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "defaultShowAncestorItems": {
            "type": "boolean",
            "description": "Default Outline should show Ancestor Items or not"
          },
          "defaultShowDescendantItems": {
            "type": "boolean",
            "description": "Default Outline should show Descendant Items or not"
          },
          "deleted": {
            "type": "boolean",
            "description": "Indicator if the tracker is deleted"
          },
          "description": {
            "type": "string",
            "description": "Description of the entity"
          },
          "descriptionFormat": {
            "type": "string",
            "description": "Description format of the entity",
            "enum": [
              "PlainText",
              "Html",
              "Wiki"
            ]
          },
          "hidden": {
            "type": "boolean",
            "description": "Indicator if the tracker is hidden"
          },
          "id": {
            "minimum": 0,
            "type": "integer",
            "description": "Id of the entity",
            "format": "int32"
          },
          "keyName": {
            "type": "string",
            "description": "Keyname of a tracker"
          },
          "modifiedAt": {
            "type": "string",
            "description": "The date when the entity was modified",
            "format": "date-time"
          },
          "modifiedBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "name": {
            "type": "string",
            "description": "Name of the entity"
          },
          "onlyWorkflowCanCreateNewReferringItem": {
            "type": "boolean",
            "description": "If true, then the only way to create new referring items is through workflow actions"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectReference"
          },
          "sharedInWorkingSet": {
            "type": "boolean",
            "description": "If the tracker is shared in a WorkingSet"
          },
          "templateTracker": {
            "$ref": "#/components/schemas/TrackerReference"
          },
          "trackerFieldLayoutSettingsModel": {
            "$ref": "#/components/schemas/TrackerFieldLayoutSettings"
          },
          "type": {
            "$ref": "#/components/schemas/TrackerTypeReference"
          },
          "usingQuickTransitions": {
            "type": "boolean",
            "description": "If true, then every transition will be executed immediately (if possible) without opening an editor for the item"
          },
          "usingWorkflow": {
            "type": "boolean",
            "description": "Should transitions and workflow actions be available in the tracker or not"
          },
          "version": {
            "type": "integer",
            "description": "Version of a tracker",
            "format": "int32"
          }
        },
        "description": "Basic properties of a codebeamer tracker"
      },
      "TrackerFieldLayoutSettings": {
        "type": "object",
        "properties": {
          "defaultLayout": {
            "type": "string",
            "description": "defaultLayout of a tracker"
          },
          "layouts": {
            "type": "array",
            "description": "fieldLayoutSettingsModels of a tracker",
            "items": {
              "$ref": "#/components/schemas/FieldLayoutSettings"
            }
          },
          "statusLayout": {
            "type": "array",
            "description": "statusLayout of a tracker",
            "items": {
              "$ref": "#/components/schemas/StatusLayout"
            }
          }
        },
        "description": "The field group layouts setting is used when rendering the edit view for a specific tracker item"
      },
      "TrackerFieldStatusPermissions": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "description": "Access permissions by role",
            "items": {
              "$ref": "#/components/schemas/AccessPermission"
            }
          },
          "status": {
            "$ref": "#/components/schemas/ChoiceOptionReference"
          }
        },
        "description": "Field permissions by role for specific status"
      },
      "TrackerFieldsStatusPermissions": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "description": "Permissions",
            "items": {
              "$ref": "#/components/schemas/TrackerFieldPermissions"
            }
          }
        },
        "description": "All field permissions by role for specific status"
      },
      "TrackerItem": {
        "type": "object",
        "properties": {
          "accruedMillis": {
            "type": "integer",
            "description": "Accrued work time of a tracker item in milliseconds",
            "format": "int64",
            "readOnly": true
          },
          "angularIcon": {
            "type": "string",
            "description": "Angular icon for the tracker item",
            "readOnly": true
          },
          "areas": {
            "type": "array",
            "description": "Areas of a tracker item",
            "items": {
              "$ref": "#/components/schemas/AbstractReference"
            }
          },
          "assignedAt": {
            "type": "string",
            "description": "Assignee date of a tracker item",
            "format": "date-time",
            "readOnly": true
          },
          "assignedTo": {
            "type": "array",
            "description": "Assignees of a tracker item",
            "items": {
              "$ref": "#/components/schemas/AbstractReference"
            }
          },
          "categories": {
            "type": "array",
            "description": "Categories of a tracker item",
            "items": {
              "$ref": "#/components/schemas/AbstractReference"
            }
          },
          "children": {
            "type": "array",
            "description": "Children of a tracker item",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/TrackerItemReference"
            }
          },
          "closedAt": {
            "type": "string",
            "description": "Close date of a tracker item",
            "format": "date-time"
          },
          "comments": {
            "type": "array",
            "description": "Comment in the tracker item",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/CommentReference"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "The date when the entity was created",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "customFields": {
            "type": "array",
            "description": "Custom field of a tracker item",
            "items": {
              "$ref": "#/components/schemas/AbstractFieldValue"
            }
          },
          "description": {
            "type": "string",
            "description": "Description of the entity"
          },
          "descriptionFormat": {
            "type": "string",
            "description": "Description format of the entity",
            "enum": [
              "PlainText",
              "Html",
              "Wiki"
            ]
          },
          "endDate": {
            "type": "string",
            "description": "End date of a tracker item",
            "format": "date-time"
          },
          "estimatedMillis": {
            "type": "integer",
            "description": "Estimated work time of a tracker item in milliseconds",
            "format": "int64"
          },
          "formality": {
            "$ref": "#/components/schemas/AbstractReference"
          },
          "iconColor": {
            "type": "string",
            "description": "Color of the tracker item icon",
            "readOnly": true
          },
          "iconUrl": {
            "type": "string",
            "description": "Url of the tracker item icon",
            "readOnly": true
          },
          "id": {
            "minimum": 0,
            "type": "integer",
            "description": "Id of the entity",
            "format": "int32"
          },
          "modifiedAt": {
            "type": "string",
            "description": "The date when the entity was modified",
            "format": "date-time"
          },
          "modifiedBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "name": {
            "type": "string",
            "description": "Name of the entity"
          },
          "ordinal": {
            "type": "integer",
            "description": "Ordinal of a tracker item",
            "format": "int32"
          },
          "owners": {
            "type": "array",
            "description": "Owners of a tracker item",
            "items": {
              "$ref": "#/components/schemas/AbstractReference"
            }
          },
          "parent": {
            "$ref": "#/components/schemas/TrackerItemReference"
          },
          "platforms": {
            "type": "array",
            "description": "Platforms of a tracker item",
            "items": {
              "$ref": "#/components/schemas/AbstractReference"
            }
          },
          "priority": {
            "$ref": "#/components/schemas/AbstractReference"
          },
          "releaseMethod": {
            "$ref": "#/components/schemas/AbstractReference"
          },
          "resolutions": {
            "type": "array",
            "description": "Resolutions of a tracker item",
            "items": {
              "$ref": "#/components/schemas/AbstractReference"
            }
          },
          "severities": {
            "type": "array",
            "description": "Severities of a tracker item",
            "items": {
              "$ref": "#/components/schemas/AbstractReference"
            }
          },
          "spentMillis": {
            "type": "integer",
            "description": "Spent work time of a tracker item in milliseconds",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "description": "Start date of a tracker item",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/AbstractReference"
          },
          "storyPoints": {
            "type": "integer",
            "description": "Story points of a tracker item",
            "format": "int32"
          },
          "subjects": {
            "type": "array",
            "description": "Subjects of a tracker item",
            "items": {
              "$ref": "#/components/schemas/AbstractReference"
            }
          },
          "tags": {
            "type": "array",
            "description": "Tags of the tracker item",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Label"
            }
          },
          "teams": {
            "type": "array",
            "description": "Teams of a tracker item",
            "items": {
              "$ref": "#/components/schemas/AbstractReference"
            }
          },
          "tracker": {
            "$ref": "#/components/schemas/TrackerReference"
          },
          "typeName": {
            "type": "string",
            "description": "Type name of a tracker item"
          },
          "version": {
            "type": "integer",
            "description": "Version of a tracker item",
            "format": "int32",
            "readOnly": true
          },
          "versions": {
            "type": "array",
            "description": "Versions of a tracker item",
            "items": {
              "$ref": "#/components/schemas/AbstractReference"
            }
          }
        },
        "description": "Basic properties of a codebeamer tracker item"
      },
      "TrackerItemAttachmentRequest": {
        "type": "object",
        "description": "Request data to retrieve tracker item attachments.",
        "allOf": [
          {
            "$ref": "#/components/schemas/TrackerItemsRequest"
          },
          {
            "type": "object",
            "properties": {
              "baselineId": {
                "type": "integer",
                "description": "Baseline id to specify the versions of the tracker items.",
                "format": "int32",
                "example": 1203
              },
              "excludeFilter": {
                "type": "boolean",
                "description": "Indicator if the attachments matching the filters need to be excluded or not",
                "example": false
              },
              "extensions": {
                "type": "array",
                "description": "File extension filters.",
                "example": [
                  "docx",
                  "xlsx"
                ],
                "items": {
                  "type": "string",
                  "description": "File extension filters.",
                  "example": "[\"docx\",\"xlsx\"]"
                }
              },
              "mimeTypes": {
                "type": "array",
                "description": "File mime type filters.",
                "example": [
                  "image/png",
                  "application/zip"
                ],
                "items": {
                  "type": "string",
                  "description": "File mime type filters.",
                  "example": "[\"image/png\",\"application/zip\"]"
                }
              }
            }
          }
        ]
      },
      "TrackerItemChildReference": {
        "required": [
          "index",
          "itemReference"
        ],
        "type": "object",
        "properties": {
          "index": {
            "minimum": 0,
            "type": "integer",
            "description": "Ordinal in the tracker outline.",
            "format": "int32",
            "example": 0
          },
          "itemReference": {
            "$ref": "#/components/schemas/TrackerItemReference"
          }
        },
        "description": "Reference to a child item in the tracker outline."
      },
      "TrackerItemField": {
        "type": "object",
        "properties": {
          "editableFields": {
            "type": "array",
            "description": "Fields which can be modified",
            "items": {
              "$ref": "#/components/schemas/AbstractFieldValue"
            }
          },
          "editableTableFields": {
            "type": "array",
            "description": "Table fields which can be modified",
            "items": {
              "$ref": "#/components/schemas/TableFieldValue"
            }
          },
          "readOnlyFields": {
            "type": "array",
            "description": "Fields which are not writable in the current state",
            "items": {
              "$ref": "#/components/schemas/AbstractFieldValue"
            }
          },
          "readOnlyTableFields": {
            "type": "array",
            "description": "Table fields which are not writable in the current state",
            "items": {
              "$ref": "#/components/schemas/TableFieldValue"
            }
          }
        }
      },
      "TrackerItemFieldAccessibilityList": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "description": "Accessibilities of fields",
            "items": {
              "$ref": "#/components/schemas/TrackerItemFieldAccessibility"
            }
          }
        }
      },
      "TrackerItemFieldMappingInfo": {
        "type": "object",
        "properties": {
          "lostMapping": {
            "type": "array",
            "description": "No mappable field exists, these fields will be lost",
            "items": {
              "$ref": "#/components/schemas/TrackerItemFieldMapping"
            }
          },
          "mapping": {
            "type": "array",
            "description": "Direct mappable fields",
            "items": {
              "$ref": "#/components/schemas/TrackerItemFieldMappingPair"
            }
          },
          "possibleMapping": {
            "type": "array",
            "description": "Not direct mappable fields, but possible mapping exist",
            "items": {
              "$ref": "#/components/schemas/TrackerItemFieldMappingPossiblePair"
            }
          }
        },
        "description": "Tracker field mapping information."
      },
      "TrackerItemFieldMappingPair": {
        "required": [
          "sourceField"
        ],
        "type": "object",
        "properties": {
          "sourceField": {
            "$ref": "#/components/schemas/TrackerItemFieldMapping"
          },
          "targetField": {
            "$ref": "#/components/schemas/TrackerItemFieldMapping"
          }
        },
        "description": "Tracker field mapping pair"
      },
      "TrackerItemFieldMappingPossiblePair": {
        "type": "object",
        "properties": {
          "possibleTargetFields": {
            "type": "array",
            "description": "Possible Target Tracker field information",
            "items": {
              "$ref": "#/components/schemas/TrackerItemFieldMapping"
            }
          },
          "sourceField": {
            "$ref": "#/components/schemas/TrackerItemFieldMapping"
          }
        },
        "description": "Possible Tracker field mapping pair"
      },
      "TrackerItemHistory": {
        "type": "object",
        "properties": {
          "versions": {
            "type": "array",
            "description": "List of version changes.",
            "items": {
              "$ref": "#/components/schemas/TrackerItemHistoryRevision"
            }
          }
        },
        "description": "Tracker item history containing all versions of an item."
      },
      "TrackerItemHistoryRevision": {
        "type": "object",
        "properties": {
          "changes": {
            "type": "array",
            "description": "Changes happened between the previous and current revision.",
            "items": {
              "$ref": "#/components/schemas/AbstractTrackerItemChange"
            }
          },
          "itemRevision": {
            "$ref": "#/components/schemas/TrackerItemRevision"
          },
          "modifiedAt": {
            "type": "string",
            "description": "The date when the entity was modified",
            "format": "date-time"
          },
          "modifiedBy": {
            "$ref": "#/components/schemas/UserReference"
          }
        },
        "description": "Revision history entry."
      },
      "TrackerItemMoveRequest": {
        "required": [
          "fieldMapping",
          "sourceTracker",
          "targetTracker"
        ],
        "type": "object",
        "properties": {
          "fieldMapping": {
            "type": "array",
            "description": "Field mappings between the Source Tacker and the Target Tracker.",
            "items": {
              "$ref": "#/components/schemas/TrackerItemFieldMappingPair"
            }
          },
          "items": {
            "type": "array",
            "description": "Optional Tracker Item list. If not provided all Tracker Items from the Source Tracker are moved.",
            "items": {
              "$ref": "#/components/schemas/TrackerItemReference"
            }
          },
          "sourceTracker": {
            "$ref": "#/components/schemas/TrackerReference"
          },
          "targetTracker": {
            "$ref": "#/components/schemas/TrackerReference"
          }
        },
        "description": "Request for Tracker Items move."
      },
      "TrackerItemReference": {
        "type": "object",
        "description": "Reference to a tracker item",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractReference"
          },
          {
            "type": "object",
            "properties": {
              "angularIcon": {
                "type": "string"
              },
              "iconColor": {
                "type": "string"
              },
              "propagateSuspects": {
                "type": "boolean"
              },
              "referenceData": {
                "$ref": "#/components/schemas/TrackerItemReferenceData"
              },
              "testStepReuse": {
                "type": "boolean"
              },
              "trackerKey": {
                "type": "string"
              },
              "trackerTypeId": {
                "type": "integer",
                "format": "int32"
              },
              "uri": {
                "type": "string"
              }
            }
          }
        ]
      },
      "TrackerItemReferenceData": {
        "type": "object",
        "properties": {
          "suspectPropagation": {
            "type": "string",
            "description": "Type of suspect propagation",
            "enum": [
              "DO_NOT_PROPAGATE",
              "PROPAGATE",
              "REVERSE",
              "BIDIRECTIONAL"
            ]
          }
        },
        "description": "Properties of a tracker item reference"
      },
      "TrackerItemReferenceSearchResult": {
        "type": "object",
        "properties": {
          "itemRefs": {
            "type": "array",
            "description": "Found tracker item references",
            "items": {
              "$ref": "#/components/schemas/TrackerItemReference"
            }
          },
          "page": {
            "type": "integer",
            "description": "Index of the page",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Size of the found page",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "description": "Number of matched tracker items by the search criteria",
            "format": "int32"
          }
        },
        "description": "One page of tracker item references."
      },
      "TrackerItemRelationsResult": {
        "type": "object",
        "properties": {
          "downstreamReferences": {
            "type": "array",
            "description": "References and associations to the item",
            "items": {
              "$ref": "#/components/schemas/DownstreamTrackerItemReference"
            }
          },
          "incomingAssociations": {
            "type": "array",
            "description": "References and associations to the item",
            "items": {
              "$ref": "#/components/schemas/IncomingTrackerItemAssociation"
            }
          },
          "isLastPage": {
            "type": "boolean",
            "description": "Set to true if it is the last page"
          },
          "itemCount": {
            "type": "integer",
            "description": "Number of items on page",
            "format": "int32"
          },
          "itemId": {
            "$ref": "#/components/schemas/TrackerItemRevision"
          },
          "outgoingAssociations": {
            "type": "array",
            "description": "References and associations to the item",
            "items": {
              "$ref": "#/components/schemas/OutgoingTrackerItemAssociation"
            }
          },
          "page": {
            "type": "integer",
            "description": "Page no.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "upstreamReferences": {
            "type": "array",
            "description": "References and associations to the item",
            "items": {
              "$ref": "#/components/schemas/UpstreamTrackerItemReference"
            }
          }
        },
        "description": "References to a tracker item"
      },
      "TrackerItemReview": {
        "type": "object",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/TrackerItemReviewConfig"
          },
          "result": {
            "type": "string",
            "description": "Whether the review is approved or rejected",
            "enum": [
              "APPROVED",
              "REJECTED",
              "UNDECIDED"
            ]
          },
          "reviewers": {
            "type": "array",
            "description": "List of reviewers, and their votes",
            "items": {
              "$ref": "#/components/schemas/TrackerItemReviewVote"
            }
          },
          "trackerItem": {
            "$ref": "#/components/schemas/TrackerItemRevision"
          }
        },
        "description": "A tracker item review instance including its reviewers and their decisions"
      },
      "TrackerItemReviewConfig": {
        "type": "object",
        "properties": {
          "requiredApprovals": {
            "type": "integer",
            "description": "Number of approvals after which the review is considered approved",
            "format": "int32"
          },
          "requiredRejections": {
            "type": "integer",
            "description": "Number of rejections after which the review is considered rejected",
            "format": "int32"
          },
          "requiredSignature": {
            "type": "string",
            "description": "Whether the user has to provide its credentials to vote",
            "enum": [
              "NONE",
              "PASSWORD",
              "USERNAME_AND_PASSWORD"
            ]
          },
          "roleRequired": {
            "type": "boolean",
            "description": "Whether the reviewers have to chose in which of their roles do they want to vote"
          }
        },
        "description": "The configuration from which the review was created"
      },
      "TrackerItemReviewVote": {
        "type": "object",
        "properties": {
          "asRole": {
            "$ref": "#/components/schemas/RoleReference"
          },
          "decision": {
            "type": "string",
            "description": "The result of this particular vote",
            "enum": [
              "APPROVED",
              "REJECTED",
              "UNDECIDED"
            ]
          },
          "reviewedAt": {
            "type": "string",
            "description": "Date and time of the vote",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/UserReference"
          }
        },
        "description": "A tracker item review instance including its reviewers and their decisions"
      },
      "TrackerItemRevision": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Tracker item id",
            "format": "int32"
          },
          "version": {
            "type": "integer",
            "description": "Tracker item version",
            "format": "int32"
          }
        },
        "description": "Tracker item revision identifier"
      },
      "TrackerItemSearchRequest": {
        "required": [
          "queryString"
        ],
        "type": "object",
        "properties": {
          "baselineId": {
            "type": "integer",
            "description": "Baseline on which the query is applied.",
            "format": "int32",
            "example": 1234
          },
          "page": {
            "type": "integer",
            "description": "Index of the page",
            "format": "int32",
            "example": 1,
            "default": 1
          },
          "pageSize": {
            "type": "integer",
            "description": "Size of the found page",
            "format": "int32",
            "example": 25,
            "default": 25
          },
          "queryString": {
            "type": "string",
            "description": "CbQL query for the requested items",
            "example": "priority='Normal'"
          }
        }
      },
      "TrackerItemSearchResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "Found tracker items",
            "items": {
              "$ref": "#/components/schemas/TrackerItem"
            }
          },
          "page": {
            "type": "integer",
            "description": "Index of the page",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Size of the found page",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "description": "Number of matched tracker items by the search criteria",
            "format": "int32"
          }
        },
        "description": "One page of tracker items."
      },
      "TrackerItemsRequest": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "Item references.",
            "items": {
              "$ref": "#/components/schemas/TrackerItemReference"
            }
          },
          "type": {
            "type": "string",
            "description": "Type of a ItemsRequest"
          }
        },
        "description": "Request model for multiple items.",
        "discriminator": {
          "propertyName": "type"
        }
      },
      "TrackerPermission": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the permission"
          },
          "id": {
            "minimum": 0,
            "type": "integer",
            "description": "Id of the entity",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "description": "Variable name of the permission"
          },
          "name": {
            "type": "string",
            "description": "Name of the entity"
          }
        }
      },
      "TrackerPermissionReference": {
        "type": "object",
        "description": "Reference to a tracker permission",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractReference"
          }
        ]
      },
      "TrackerReference": {
        "type": "object",
        "description": "Reference to a tracker",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractReference"
          }
        ]
      },
      "TrackerReportSettings": {
        "required": [
          "cbQl",
          "columns",
          "description",
          "isPublic",
          "name",
          "tracker"
        ],
        "type": "object",
        "properties": {
          "cbQl": {
            "type": "string",
            "description": "CbQL query string of the report.",
            "example": "priority='Normal'"
          },
          "columns": {
            "type": "array",
            "description": "Column definitions.",
            "items": {
              "$ref": "#/components/schemas/ResizableReportColumnSettings"
            }
          },
          "description": {
            "type": "string",
            "description": "Description of the report.",
            "example": "Normal priority items."
          },
          "isPublic": {
            "type": "boolean",
            "description": "Public report indicator.",
            "example": true
          },
          "name": {
            "type": "string",
            "description": "Name of the report.",
            "example": "My first query"
          },
          "referenceLevelSettings": {
            "type": "array",
            "description": "Reference level setting for Intelligent Table View.",
            "items": {
              "$ref": "#/components/schemas/ReportReferenceLevelSettings"
            }
          },
          "renderingMethod": {
            "type": "string",
            "description": "Rendering method for Intelligent Table View.",
            "example": "table",
            "enum": [
              "disabled",
              "table",
              "tree"
            ]
          },
          "reportId": {
            "type": "integer",
            "description": "Id of a report",
            "format": "int32",
            "example": 1
          },
          "showAllChildren": {
            "type": "boolean",
            "description": "Indicator to ability to collapse/expand all child items.",
            "example": false
          },
          "showAncestors": {
            "type": "boolean",
            "description": "Indicator to show the ancestors of a result item.",
            "example": true
          },
          "showDescendants": {
            "type": "boolean",
            "description": "Indicator to show the descendants of a result item.",
            "example": false
          },
          "tracker": {
            "$ref": "#/components/schemas/TrackerReference"
          }
        },
        "description": "Settings of a report on a tracker."
      },
      "TrackerTree": {
        "type": "object",
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackerTree"
            }
          },
          "isFolder": {
            "type": "boolean",
            "description": "Folder or tracker"
          },
          "text": {
            "type": "string",
            "description": "Name of a folder"
          },
          "trackerId": {
            "type": "integer",
            "description": "Id of the tracker",
            "format": "int32"
          }
        },
        "description": "Properties of tracker tree"
      },
      "TrackerType": {
        "type": "object",
        "properties": {
          "branchable": {
            "type": "boolean",
            "description": "True if tracker type is branchable"
          },
          "color": {
            "type": "string",
            "description": "Color of a tracker type"
          },
          "docEditView": {
            "type": "boolean",
            "description": "True if tracker type has document view"
          },
          "editorUrl": {
            "type": "string",
            "description": "Editor URL of a tracker type"
          },
          "id": {
            "minimum": 0,
            "type": "integer",
            "description": "Id of the entity",
            "format": "int32"
          },
          "itemIconUrl": {
            "type": "string",
            "description": "Item icon URL of a tracker type"
          },
          "name": {
            "type": "string",
            "description": "Name of the entity"
          },
          "outline": {
            "type": "boolean",
            "description": "True if outline is enabled"
          },
          "trackerIconUrl": {
            "type": "string",
            "description": "Tracker icon URL of a tracker type"
          },
          "urlLinkFormat": {
            "type": "string",
            "description": "URL link format of a tracker type"
          },
          "varName": {
            "type": "string",
            "description": "Internal/variable name of a tracker type"
          }
        }
      },
      "TrackerTypeReference": {
        "type": "object",
        "description": "Reference to a tracker type",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractReference"
          }
        ]
      },
      "TrackerWorkingSet": {
        "type": "object",
        "properties": {
          "baseline": {
            "$ref": "#/components/schemas/TrackerBaselineReference"
          },
          "branch": {
            "$ref": "#/components/schemas/BranchReference"
          },
          "createdAt": {
            "type": "string",
            "description": "The date when the entity was created",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "deleted": {
            "type": "boolean",
            "description": "Is the Working-Set deleted or not"
          },
          "sharedInWorkingSet": {
            "type": "boolean",
            "description": "The Tracker is shared in Working-Set"
          },
          "workingSet": {
            "$ref": "#/components/schemas/WorkingSetReference"
          }
        },
        "description": "Working-Set information where the Tracker exists"
      },
      "UpdateAttachment": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "format": "binary"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "descriptionFormat": {
            "type": "string",
            "description": "Format of description",
            "default": "PlainText",
            "enum": [
              "PlainText",
              "Html",
              "Wiki"
            ]
          }
        }
      },
      "UpdateTrackerItemChildrenRequest": {
        "type": "object",
        "properties": {
          "children": {
            "type": "array",
            "description": "Child items to update",
            "items": {
              "$ref": "#/components/schemas/TrackerItemReference"
            }
          }
        },
        "description": "Tracker item child update request"
      },
      "UpdateTrackerItemField": {
        "type": "object",
        "properties": {
          "fieldValues": {
            "type": "array",
            "description": "Fields of a tracker item",
            "items": {
              "$ref": "#/components/schemas/AbstractFieldValue"
            }
          },
          "tableValues": {
            "type": "array",
            "description": "Fields of a tracker item",
            "items": {
              "$ref": "#/components/schemas/TableFieldValue"
            }
          }
        },
        "description": "Update fields of a tracker item"
      },
      "UpdateTrackerItemFieldWithItemId": {
        "type": "object",
        "properties": {
          "fieldValues": {
            "type": "array",
            "description": "Fields of a tracker item",
            "items": {
              "$ref": "#/components/schemas/AbstractFieldValue"
            }
          },
          "itemId": {
            "type": "integer",
            "description": "Id of a tracker item",
            "format": "int32"
          },
          "tableValues": {
            "type": "array",
            "description": "Fields of a tracker item",
            "items": {
              "$ref": "#/components/schemas/TableFieldValue"
            }
          }
        },
        "description": "Update fields of a tracker item and provide the itemId as well"
      },
      "UpdateTrackerItemTableField": {
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "description": "Table rows of a tracker table item",
            "items": {
              "type": "array",
              "description": "Table rows of a tracker table item",
              "items": {
                "$ref": "#/components/schemas/AbstractFieldValue"
              }
            }
          }
        }
      },
      "UploadAttachment": {
        "type": "object",
        "properties": {
          "attachments": {
            "type": "string",
            "description": "Attachments of a comment",
            "format": "binary"
          }
        }
      },
      "UpstreamTrackerItemReference": {
        "type": "object",
        "description": "Reference to other tracker item",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractTrackerItemReference"
          }
        ]
      },
      "UserReference": {
        "type": "object",
        "description": "Reference to a user",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractReference"
          },
          {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "Email of a referenced user"
              }
            }
          }
        ]
      },
      "WorkflowTransition": {
        "required": [
          "toStatus"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the entity"
          },
          "descriptionFormat": {
            "type": "string",
            "description": "Description format of the entity",
            "enum": [
              "PlainText",
              "Html",
              "Wiki"
            ]
          },
          "fromStatus": {
            "$ref": "#/components/schemas/ChoiceOptionReference"
          },
          "hidden": {
            "type": "boolean",
            "description": "Indicator if the transition is hidden"
          },
          "id": {
            "minimum": 0,
            "type": "integer",
            "description": "Id of the entity",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the entity"
          },
          "permissions": {
            "type": "array",
            "description": "Access permissions of the transition",
            "items": {
              "$ref": "#/components/schemas/AccessPermission"
            }
          },
          "toStatus": {
            "$ref": "#/components/schemas/ChoiceOptionReference"
          }
        },
        "description": "A transition in the workflow"
      },
      "WorkingSetReference": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractReference"
          }
        ]
      },
      "AbstractFieldValue": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "fieldId": {
            "type": "integer",
            "description": "Id of the field",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the field"
          },
          "sharedFieldName": {
            "type": "string",
            "description": "The name of a shared field assigned to the field. This can be specified as an alternative to fieldId.",
            "writeOnly": true
          },
          "sharedFieldNames": {
            "type": "array",
            "description": "The names of a shared fields assigned to the field.",
            "items": {
              "type": "string",
              "description": "The names of a shared fields assigned to the field."
            }
          },
          "type": {
            "type": "string",
            "description": "Type of the field"
          }
        },
        "description": "Value container of a field",
        "discriminator": {
          "propertyName": "type"
        }
      },
      "AbstractReference": {
        "type": "object",
        "properties": {
          "id": {
            "minimum": 0,
            "type": "integer",
            "description": "Id of the entity",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the entity"
          },
          "type": {
            "type": "string",
            "description": "Type of a referenced object"
          }
        },
        "description": "Reference to an item",
        "discriminator": {
          "propertyName": "type"
        }
      },
      "AbstractTrackerItemChange": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/FieldReference"
          },
          "name": {
            "type": "string",
            "description": "Name of the field"
          },
          "newValue": {
            "$ref": "#/components/schemas/AbstractFieldValue"
          },
          "oldValue": {
            "$ref": "#/components/schemas/AbstractFieldValue"
          },
          "type": {
            "type": "string",
            "description": "Change model type"
          }
        },
        "description": "Update of an item's field",
        "discriminator": {
          "propertyName": "type"
        }
      },
      "AbstractTrackerItemReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of the reference/association",
            "format": "int32",
            "example": 12142
          },
          "itemRevision": {
            "$ref": "#/components/schemas/TrackerItemRevision"
          },
          "type": {
            "type": "string",
            "description": "Type of the relation",
            "example": "DownstreamTrackerItemReference"
          }
        },
        "description": "Reference to an item",
        "discriminator": {
          "propertyName": "type"
        }
      },
      "AccessPermission": {
        "type": "object",
        "properties": {
          "accessLevel": {
            "type": "string",
            "description": "Access level",
            "enum": [
              "NONE",
              "READ",
              "WRITE",
              "READ_WRITE"
            ]
          },
          "field": {
            "$ref": "#/components/schemas/FieldReference"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectReference"
          },
          "role": {
            "$ref": "#/components/schemas/RoleReference"
          }
        },
        "description": "Access permission of specific role"
      },
      "AutomatedTestCaseRunResult": {
        "required": [
          "name",
          "result"
        ],
        "type": "object",
        "properties": {
          "conclusion": {
            "type": "string",
            "description": "Optional Test Case Run conclusion"
          },
          "description": {
            "type": "string",
            "description": "Description of the Test Case"
          },
          "groupName": {
            "type": "string",
            "description": "Group name of the Test Case"
          },
          "name": {
            "type": "string",
            "description": "Name of the Test Case"
          },
          "result": {
            "type": "string",
            "description": "Result of the test case",
            "enum": [
              "PASSED",
              "FAILED",
              "BLOCKED",
              "NOT_APPLICABLE"
            ]
          },
          "runTime": {
            "type": "integer",
            "description": "Optional runtime in seconds",
            "format": "int32"
          }
        },
        "description": "Request model to create a test run from test case"
      },
      "BranchReference": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractReference"
          }
        ]
      },
      "DownstreamTrackerItemReference": {
        "type": "object",
        "description": "Reference pointing to another item",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractTrackerItemReference"
          }
        ]
      },
      "FieldLayoutSettings": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "description": "groupsModels of a fieldLayoutSettingsModel",
            "items": {
              "$ref": "#/components/schemas/FieldLayoutGroups"
            }
          },
          "name": {
            "type": "string",
            "description": "name of a fieldLayoutSettingsModel"
          },
          "showDefault": {
            "type": "boolean",
            "description": "showDefault of a fieldLayoutSettingsModel"
          }
        },
        "description": "fieldLayoutSettingsModels of a tracker"
      },
      "IncomingTrackerItemAssociation": {
        "type": "object",
        "description": "Association pointing to an item",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractTrackerItemReference"
          }
        ]
      },
      "Label": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "The date when the entity was created",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "hidden": {
            "type": "boolean",
            "description": "Whether the label is hidden or not"
          },
          "id": {
            "minimum": 0,
            "type": "integer",
            "description": "Id of the entity",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the entity"
          },
          "privateLabel": {
            "type": "boolean",
            "description": "Whether the label is private or not"
          }
        },
        "description": "Label that is used for entities like tags.",
        "readOnly": true
      },
      "OutgoingTrackerItemAssociation": {
        "type": "object",
        "description": "Association to another item",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractTrackerItemReference"
          }
        ]
      },
      "OutlineItem": {
        "type": "object",
        "description": "Represents an outline item.",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractOutline"
          },
          {
            "type": "object",
            "properties": {
              "hasChildren": {
                "type": "boolean",
                "description": "Indicator if the item has child items."
              },
              "itemReference": {
                "$ref": "#/components/schemas/TrackerItemReference"
              }
            }
          }
        ]
      },
      "ProjectReference": {
        "type": "object",
        "description": "Reference to a project",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractReference"
          }
        ]
      },
      "ReportColumn": {
        "type": "object",
        "properties": {
          "columnIndex": {
            "type": "integer",
            "description": "Column position index in the report.",
            "format": "int32",
            "example": 0
          },
          "columnRef": {
            "type": "string",
            "description": "Column reference",
            "example": "12-1"
          },
          "columnWidthPercentage": {
            "type": "number",
            "description": "Column width in percentage",
            "format": "double",
            "example": 16.533667
          },
          "field": {
            "$ref": "#/components/schemas/FieldReference"
          },
          "name": {
            "type": "string",
            "description": "Column name",
            "example": "Status"
          },
          "type": {
            "type": "string",
            "description": "Column type",
            "example": "choice"
          }
        },
        "description": "Column definition for a report"
      },
      "ReportGroup": {
        "type": "object",
        "properties": {
          "aggregates": {
            "type": "array",
            "description": "List of the aggregate values with column id.",
            "items": {
              "$ref": "#/components/schemas/ReportAggregate"
            }
          },
          "count": {
            "type": "number",
            "description": "Number of items in the group, if it has subgroups then the aggregated number of items.",
            "format": "double",
            "example": 32
          },
          "groupingValue": {
            "type": "string",
            "description": "The common value in the group, , if it's available",
            "example": "In progress"
          },
          "groupingValueId": {
            "type": "integer",
            "description": "The id of the common value in the group, if it's available",
            "format": "int32",
            "example": 2
          },
          "header": {
            "type": "string",
            "description": "Grouping header",
            "example": "Status: In progress"
          },
          "type": {
            "type": "string",
            "description": "Type of the group.",
            "example": "row"
          }
        },
        "description": "A report group which can contain rows or other groups based on the type.",
        "discriminator": {
          "propertyName": "type"
        }
      },
      "ReportItem": {
        "type": "object",
        "properties": {
          "isRealResult": {
            "type": "boolean",
            "description": "Indicator if the item is a real query result (e.g. not an ancestor item)."
          },
          "item": {
            "$ref": "#/components/schemas/TrackerItem"
          },
          "outlineLevel": {
            "type": "integer",
            "description": "Item's level in the tracker outline.",
            "format": "int32"
          }
        },
        "description": "An item of the report."
      },
      "ReportPagingInformation": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Index of the page",
            "format": "int32"
          },
          "pageCount": {
            "type": "integer",
            "description": "Number of pages in the report",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Size of the found page",
            "format": "int32"
          }
        },
        "description": "Paging information of the current result."
      },
      "ReportReferenceLevelSettings": {
        "required": [
          "columns",
          "downstreamReference",
          "level",
          "upstreamReference"
        ],
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "description": "Columns to show on this reference level.",
            "items": {
              "$ref": "#/components/schemas/ReportColumnSettings"
            }
          },
          "downstreamReference": {
            "type": "boolean",
            "description": "Include downstream references indicator.",
            "example": false
          },
          "level": {
            "minimum": 1,
            "type": "integer",
            "description": "Level of the reference layer",
            "format": "int32",
            "example": 1
          },
          "referenceTrackerTypes": {
            "type": "array",
            "description": "Tracker types to include on this level.",
            "items": {
              "$ref": "#/components/schemas/TrackerTypeReference"
            }
          },
          "referenceTrackers": {
            "type": "array",
            "description": "Trackers to include on this level.",
            "items": {
              "$ref": "#/components/schemas/TrackerReference"
            }
          },
          "upstreamReference": {
            "type": "boolean",
            "description": "Include upstream references indicator.",
            "example": true
          }
        },
        "description": "Reference level settings for Intelligent Table View."
      },
      "ResizableReportColumnSettings": {
        "required": [
          "columnIndex",
          "field"
        ],
        "type": "object",
        "properties": {
          "columnIndex": {
            "type": "integer",
            "description": "Index of the column in the report table.",
            "format": "int32",
            "example": 0
          },
          "columnWidthPercentage": {
            "type": "number",
            "description": "Width of the column in percentage.",
            "format": "double",
            "example": 43.2
          },
          "field": {
            "$ref": "#/components/schemas/FieldReference"
          }
        },
        "description": "Settings for a resizeable column definition."
      },
      "RoleReference": {
        "type": "object",
        "description": "Reference to a role",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractReference"
          }
        ]
      },
      "StatusLayout": {
        "type": "object",
        "properties": {
          "layout": {
            "type": "string",
            "description": "layout of a statusLayout"
          },
          "status": {
            "type": "string",
            "description": "status of a statusLayout"
          }
        },
        "description": "statusLayout of a tracker"
      },
      "TableFieldValue": {
        "required": [
          "type"
        ],
        "type": "object",
        "description": "Value container of a table field",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractFieldValue"
          },
          {
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "description": "Table values",
                "items": {
                  "type": "array",
                  "description": "Table values",
                  "items": {
                    "$ref": "#/components/schemas/AbstractFieldValue"
                  }
                }
              }
            }
          }
        ]
      },
      "TrackerBaselineReference": {
        "type": "object",
        "description": "Reference to a tracker baseline",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractReference"
          }
        ]
      },
      "TrackerFieldPermissions": {
        "type": "object",
        "properties": {
          "fieldPermissions": {
            "type": "array",
            "description": "Permissions for the given field",
            "items": {
              "$ref": "#/components/schemas/TrackerFieldStatusPermissions"
            }
          },
          "fieldReference": {
            "$ref": "#/components/schemas/FieldReference"
          }
        },
        "description": "Tracker field permissions"
      },
      "TrackerItemFieldAccessibility": {
        "type": "object",
        "properties": {
          "editable": {
            "type": "boolean",
            "description": "Field is editable"
          },
          "field": {
            "$ref": "#/components/schemas/FieldReference"
          },
          "mandatory": {
            "type": "boolean",
            "description": "Field is mandatory"
          },
          "visible": {
            "type": "boolean",
            "description": "Field is visible"
          }
        },
        "description": "Accessibilities of fields"
      },
      "TrackerItemFieldMapping": {
        "type": "object",
        "properties": {
          "id": {
            "minimum": 0,
            "type": "integer",
            "description": "Id of the entity",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the entity"
          },
          "property": {
            "type": "string",
            "description": "Tracker field property name"
          },
          "typeName": {
            "type": "string",
            "description": "Tracker field type"
          }
        },
        "description": "Information of Tracker field"
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "description": "Please login using your codebeamer token",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      },
      "BasicAuth": {
        "description": "Please use your username and password",
        "scheme": "basic",
        "type": "http"
      },
      "BearerAuth": {
        "bearerFormat": "JWT",
        "description": "Please login using your openId token",
        "scheme": "bearer",
        "type": "http"
      }
    }
  }
}